/* 통계전산처리 1강*/
/* 로그창 - 명령문 실행 시 제대로 실행되었는지 오류가 생겼는지 확인할 때 사용
run;은 실행되는 것 아님
확장편집기를 저장하는 것이 가장 중요->필요에 따라 결과창에 있는 결과 저장->로그창을 저장
즉 우선순위 확장편집기>결과창>로그창
$의 의미: 문자형 변수 */
/* 통계전산처리 2강 */
/* 데이터 step=> 데이터 생성
proc step => 데이터 재배열 등의 작업
RUN을 제외하고 실행해도 실행은 된다. 하지만 이 상태로 부분 실행을 하면 어떤 경우 아무런 결과 값이 나타나지 않는다. 따라서 step이 끝날 때 마다 run을 추가해주는 습관을 들이는 것이 좋다. 가독성도 좋아지는 효과도 있으니
SAS 키워드는 프로그램 고유로 정해진 것이므로 CARDS->CARD 이런 식으로 바꾸면 안된다.
변수명 지을 시 최대 8글자까지(영문. 한글은 4글자=>한 글자 당 2바이트 이므로) 지정할 수 있다.=>기본적으로 영문으로 짓는다. 한글도 가능은 한데, 특정 옵션을 지정해두어야 한다. + 첫글자는 영문자/_(underline)으로 시작할 수 있다.=>underline으로 시작하면 뭔가 곤란한 상황이 분명히 오기 때문에 그냥 영문자로 시작하는게 낫다. + 2번째 글자부터는 숫자도 가능하다.
+ 이름 중간에 공백은 허용하지 않는다.
options validvarname = any를 사용하면 한글 변수명 사용 O
1) SAS의 경우 변수명에서 대/소문자를 딱히 구분하지 않는다.
2) 문장이 끝날 때 ;(semicolon)으로 끝나야만 한다. 
=> 예외 존재; 1.데이터 입력 시에는 한줄마다 입력 X, 데이터 다 입력하고 마지막에만 입력하면 된다.
2.는 나중에 소개
3) 명령문은 첫 열부터 시작해도 되고, 중간 열에서 시작해도 된다.
4) 하나의 문장이 2~3줄에 걸쳐서 작성되어도 상관 없다.=>semicolon만 붙여주면 된다.
5) 한 줄에 여러개의 문장을 사용해도 상관 X, 마찬가지로 semicolon만 붙여주면 된다. */
/* 주석은 이렇게 표시해주면 된다. 최신버전은 * *로 해도 되긴하지만 무슨 버전을 사용할 지는 알 수 없으므로 그냥 이렇게 표시하도록 하자 */
/* 변수의 종류
1. 문자 변수
2. 숫자 변수
3. 날짜 변수 - 날짜를 나타내주는 변수로 숫자의 속성을 가짐.
4. 자동 변수 - 시스템에서 자동으로 생성해주는 변수. 데이터 라인의 실행횟수가 기록되는 변수가 자동 생성된다. => 따라서 시스템에서 자동으로 생성해주는 변수와 같은 이름은 피해야하는데, 시스템에서 자동으로 생성하는 변수는 전부 underline으로 시작하므로 underline으로 시작하는 변수를 생성하지 않으면 이런 문제를 피할 수 있다.
SAS는 제곱으로 ** 사용함(^ 아님, ^는 not의 의미)
비교 연산자로 문자도 사용할 수 있음에 유의 */

data examd; /* examd라는 이름의 데이터를 생성, 특정 데이터에 대해서 작업을 하라고 지정할 때에도 data문 사용*/
/* 데이터가 어떤 것이다라고 정의해주는 명령문이 cards, 이후에 row data들을 쭉 입력해준다.*/
/* cards=datalines*/
input id 1-2 sex $ 3 ae 4-5 edu 6 dept 7 sat 8 wage
	9-15 wkhr 16-19 .1;
cards;
01M29112 3990001429
02F20111 4590002080
03M22221 3680001500
04F30222 4200019232
05F33121 4700021821
;
run;
proc print;
run;
data examd1 (drop=id dept sat); /* 여기서 examd로 다시 바꾸고 싶다면 data=examd를 반드시 포함해줘야함*/
/* drop: 특정 데이터 컬럼 제외*/
set examd;
/* set: examd를 그대로 가져와라=>이름과 뜻 모두, 추후 다시 설명*/
hout = wage / wkhr;
run;
proc print;
run;
